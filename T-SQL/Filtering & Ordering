Selecting Rows that Meet Certain Criteria Using "Order By"

-- Select the first 5 rows from the specified columns & order by event_date
SELECT 
  TOP (5) 
  description,event_date 
FROM 
  grid 
ORDER BY 
  event_date;
  
  
 Sort Results By Descending Order
 
 -- Select the top 20 rows from description, nerc_region and event_date
  -- Order by nerc_region, affected_customers & event_date
   -- Event_date should be in descending order
SELECT 
  TOP (20) 
  description,
  nerc_region,
  event_date
FROM 
  grid 
ORDER BY
  nerc_region,
  affected_customers,
  event_date DESC;
  
  
  Using the "Where" Clause. The WHERE clause is essential for selecting, updating (and deleting) data from your tables.
  
  -- Select description and event_year. Return rows WHERE the description is 'Vandalism'
SELECT 
  description, 
  event_year 
FROM 
  grid 
WHERE
  description = 'Vandalism';
  
  
  When filtering strings, you need to wrap your value in 'single quotes'. You don't need to do this for numeric values,
    but you DO need to use single quotes for date columns. Dates are always represented in the YYYY-MM-DD format (Year-Month-Day),
    which is the default in Microsoft SQL Server.
  
 
 Using Greater Than or Equal To 
 
  -- Select nerc_region and demand_loss_mw. Retrieve rows where affected_customers is >= 500000  (500,000)
SELECT 
  nerc_region, 
  demand_loss_mw 
FROM 
  grid 
WHERE
  affected_customers >= 500000;
  
  
Sorting by Date Using the WHERE Clause

  -- Select description and affected customers, returning records where the event_date was the 22nd December, 2013.
SELECT 
  description, 
  affected_customers 
FROM 
  grid 
  -- Retrieve rows where the event_date was the 22nd December, 2013    
WHERE 
  event_date = '2013-12-22';
  
  
  Using the BETWEEN Clause
  
  -- Select description, affected_customers and event date.  
  -- The affected_customers column should be >= 50000 and <=150000
  -- Order in descending order of event_date
SELECT 
  description, 
  affected_customers,
  event_date
FROM 
  grid     
WHERE 
  affected_customers BETWEEN 50000 AND 150000
ORDER BY
  event_date DESC;
  
  
  Working with NULL values
    A NULL value could mean 'zero' - if something doesn't happen, it can't be logged in a table. However, NULL can also mean 'unknown' or 'missing'.
    So consider if it is appropriate to replace them in your results. NULL values provide feedback on data quality. If you have NULL values,
    and you didn't expect to have any, then you have an issue with either how data is captured or how it's entered in the database.

 Filtering for NULL values, excluding them from results, and replacing them with alternative values
 
 -- Retrieve all columns.
  -- Return only rows where demand_loss_mw is missing or unknown  
SELECT * 
FROM 
  grid   
WHERE 
  demand_loss_mw IS NULL;
  
-- Return rows where demand_loss_mw is not unknown or missing
  SELECT * 
FROM 
  grid   
WHERE 
  demand_loss_mw IS NOT NULL;
